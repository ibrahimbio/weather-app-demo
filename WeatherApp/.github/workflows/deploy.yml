name: Build and Deploy to AKS

on:
  push:
    branches: [ main ]

env:
  IMAGE_NAME: weather-app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4   # Clone repo

    - uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.0.x'

    - run: dotnet restore WeatherApp/WeatherApp.csproj
    - run: dotnet build WeatherApp/WeatherApp.csproj -c Release

    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - run: |
        IMAGE_TAG=${{ secrets.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
        az acr build \
          --registry ${{ secrets.ACR_NAME }} \
          --image ${{ env.IMAGE_NAME }}:${{ github.sha }} \
          --file WeatherApp/Dockerfile \
          .
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

    - run: |
        az aks get-credentials \
          --resource-group ${{ secrets.RESOURCE_GROUP }} \
          --name ${{ secrets.CLUSTER_NAME }} \
          --overwrite-existing

        kubectl set image deployment/weather-app weather-app=${{ env.IMAGE_TAG }}
        kubectl rollout status deployment/weather-app --timeout=600s  # this is
    

        